"use strict";(self.webpackChunkangular_training_platform=self.webpackChunkangular_training_platform||[]).push([[1365],{3164:(n,s,a)=>{a.r(s),a.d(s,{default:()=>o});var e=a(6252);const t=[(0,e.uE)('<h1 id="component-creation" tabindex="-1"><a class="header-anchor" href="#component-creation" aria-hidden="true">#</a> Component Creation</h1><h3 id="using-angular-cli" tabindex="-1"><a class="header-anchor" href="#using-angular-cli" aria-hidden="true">#</a> Using Angular CLI</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ng generate component <span class="token punctuation">[</span>component-name<span class="token punctuation">]</span>\n\n<span class="token comment"># or</span>\n\nng g c <span class="token punctuation">[</span>component-name<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="manual-creation" tabindex="-1"><a class="header-anchor" href="#manual-creation" aria-hidden="true">#</a> Manual Creation</h3><p><strong>Step 1</strong> - Create a new folder for the component inside the <code>src/app</code> folder.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>src/app/<span class="token punctuation">[</span>component-name<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Step 2</strong> - Create a new TypeScript file for the component inside the new folder.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>src/app/<span class="token punctuation">[</span>component-name<span class="token punctuation">]</span>/<span class="token punctuation">[</span>component-name<span class="token punctuation">]</span>.component.ts\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Step 3</strong> - Create a new HTML file for the component inside the new folder.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>src/app/<span class="token punctuation">[</span>component-name<span class="token punctuation">]</span>/<span class="token punctuation">[</span>component-name<span class="token punctuation">]</span>.component.html\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Step 4</strong> - Create a new CSS file for the component inside the new folder.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>src/app/<span class="token punctuation">[</span>component-name<span class="token punctuation">]</span>/<span class="token punctuation">[</span>component-name<span class="token punctuation">]</span>.component.css\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Step 5</strong> - Import the Component class from the <code>@angular/core</code> module.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Step 6</strong> - Decorate the class with the <code>@Component</code> decorator.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  selector<span class="token operator">:</span> <span class="token string">&#39;app-[component-name]&#39;</span><span class="token punctuation">,</span>\n  standalone<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  templateUrl<span class="token operator">:</span> <span class="token string">&#39;./[component-name].component.html&#39;</span><span class="token punctuation">,</span>\n  styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;./[component-name].component.css&#39;</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you want to create a non-standalone component, set the <code>standalone</code> property to <code>false</code>. The standalone component is enabled by default in Angular v17 and later.</p><p><strong>Step 7</strong> - Define the selector, template, and styles for the component.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>selector - The selector for the component.\ntemplateUrl - The URL of the HTML template for the component.\nstyleUrls - An array of URLs of the stylesheets for the component.\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Step 8</strong> - Export the class.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token punctuation">[</span>ComponentName<span class="token punctuation">]</span>Component <span class="token punctuation">{</span>\n  <span class="token comment">// Component logic here</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Step 9</strong> - Import the component class in the <code>app.module.ts</code> file.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>ComponentName<span class="token punctuation">]</span>Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./[component-name]/[component-name].component&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Step 10</strong> - Add the component to the <code>declarations</code> array in the <code>@NgModule</code> decorator.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>declarations<span class="token operator">:</span> <span class="token punctuation">[</span>\n  AppComponent<span class="token punctuation">,</span>\n  <span class="token punctuation">[</span>ComponentName<span class="token punctuation">]</span>Component\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you created a standalone component, <code>app.module.ts</code> file is not required. You can import the component in the <code>app.component.ts</code> file. as shown below.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>ComponentName<span class="token punctuation">]</span>Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./[component-name]/[component-name].component&#39;</span><span class="token punctuation">;</span>\n\n<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  selector<span class="token operator">:</span> <span class="token string">&#39;app-root&#39;</span><span class="token punctuation">,</span>\n  standalone<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  imports<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>ComponentName<span class="token punctuation">]</span>Component<span class="token punctuation">]</span><span class="token punctuation">,</span>\n  templateUrl<span class="token operator">:</span> <span class="token string">&#39;./app.component.html&#39;</span><span class="token punctuation">,</span>\n  styleUrl<span class="token operator">:</span> <span class="token string">&#39;./app.component.scss&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n  title <span class="token operator">=</span> <span class="token string">&#39;app&#39;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Step 11</strong> - Use the component selector in the HTML template.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">&lt;</span>app<span class="token operator">-</span><span class="token punctuation">[</span>component<span class="token operator">-</span>name<span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>app<span class="token operator">-</span><span class="token punctuation">[</span>component<span class="token operator">-</span>name<span class="token punctuation">]</span><span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Step 12</strong> - Run the application using the <code>ng serve</code> command.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ng serve\n\n<span class="token comment"># or</span>\n\nng serve <span class="token parameter variable">--open</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h3><p><strong>Creating the component files (Version 16 and earlier)</strong> -</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>//test-component.component.ts\n<span class="token function">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> from <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span>\n\n@Component<span class="token punctuation">(</span><span class="token punctuation">{</span>\n  selector: <span class="token string">&#39;test-component&#39;</span>,\n  templateUrl: <span class="token string">&#39;./component.component.html&#39;</span>,\n  styleUrls: <span class="token punctuation">[</span><span class="token string">&#39;./component.component.css&#39;</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token builtin class-name">export</span> class TestComponent <span class="token punctuation">{</span>\n  // Component logic here\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--component.component.html--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Test Component<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/*component.component.css*/</span>\n<span class="token selector">h1</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Creating the component files (Version 17 and later)</strong> -</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>//test-component.component.ts\n<span class="token function">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> from <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span>\n\n@Component<span class="token punctuation">(</span><span class="token punctuation">{</span>\n  selector: <span class="token string">&#39;app-test-component&#39;</span>,\n  standalone: true,\n  templateUrl: <span class="token string">&#39;./test-component.component.html&#39;</span>,\n  styleUrls: <span class="token punctuation">[</span><span class="token string">&#39;./test-component.component.css&#39;</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token builtin class-name">export</span> class TestComponent <span class="token punctuation">{</span>\n  // Component logic here\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can create a standalone component by setting the <code>standalone</code> property to <code>true</code>. The standalone component is enabled by default in Angular v17 and later. You can disable the standalone component by setting the <code>standalone</code> property to <code>false</code> in the <code>@Component</code> decorator of the component. If you disable the standalone component, you need to import the component in the <code>app.module.ts</code> file. If you created a non-standalone component, you will see no standalone property in the <code>@Component</code> decorator.</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--test-component.component.html--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Test Component<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/*test-component.component.css*/</span>\n<span class="token selector">h1</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Importing the component in the app.module.ts file (Version 16 and earlier)</strong> -</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">//app.module.ts</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BrowserModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/platform-browser&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> NgModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span>\n \n<span class="token keyword">import</span> <span class="token punctuation">{</span> AppComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./app.component&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> TestComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./app.component&#39;</span><span class="token punctuation">;</span>\n\n<span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  declarations<span class="token operator">:</span> <span class="token punctuation">[</span>\n    AppComponent<span class="token punctuation">,</span>\n    TestComponent\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  imports<span class="token operator">:</span> <span class="token punctuation">[</span>\n    BrowserModule\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  providers<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  bootstrap<span class="token operator">:</span> <span class="token punctuation">[</span>AppComponent<span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppModule</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Importing the component in the app.module.ts file (Version 17 and later without standalone component)</strong> -</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">//app.module.ts</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BrowserModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/platform-browser&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> NgModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span> AppComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./app.component&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> TestComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./test-component/test-component.component&#39;</span><span class="token punctuation">;</span>\n\n<span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  declarations<span class="token operator">:</span> <span class="token punctuation">[</span>\n    AppComponent<span class="token punctuation">,</span>\n    TestComponent\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  imports<span class="token operator">:</span> <span class="token punctuation">[</span>\n    BrowserModule\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  providers<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  bootstrap<span class="token operator">:</span> <span class="token punctuation">[</span>AppComponent<span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppModule</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In version 17 and later, the standalone component is enabled by default. You can disable the standalone component by setting the <code>standalone</code> property to <code>false</code>. Inside app folder, <code>app.config.ts</code> file is created by default.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ApplicationConfig<span class="token punctuation">,</span> provideZoneChangeDetection <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> provideRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/router&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span> routes <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./app.routes&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> appConfig<span class="token operator">:</span> ApplicationConfig <span class="token operator">=</span> <span class="token punctuation">{</span>\n  providers<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token function">provideZoneChangeDetection</span><span class="token punctuation">(</span><span class="token punctuation">{</span> eventCoalescing<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">provideRouter</span><span class="token punctuation">(</span>routes<span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can import the component in the <code>app.component.ts</code> file and use the component selector in the HTML template.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">//app.component.ts</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> RouterOutlet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/router&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> TestComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./test-component/test-component.component&#39;</span><span class="token punctuation">;</span>\n\n<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  selector<span class="token operator">:</span> <span class="token string">&#39;app-root&#39;</span><span class="token punctuation">,</span>\n  standalone<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  imports<span class="token operator">:</span> <span class="token punctuation">[</span>TestComponent<span class="token punctuation">]</span><span class="token punctuation">,</span>\n  templateUrl<span class="token operator">:</span> <span class="token string">&#39;./app.component.html&#39;</span><span class="token punctuation">,</span>\n  styleUrl<span class="token operator">:</span> <span class="token string">&#39;./app.component.scss&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n  title <span class="token operator">=</span> <span class="token string">&#39;app&#39;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--app.component.html--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>app-test-component</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>app-test-component</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Creating the inline Template &amp; StyleUrls</strong> -</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span>\n \n<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  selector<span class="token operator">:</span> <span class="token string">&#39;app-root&#39;</span><span class="token punctuation">,</span>\n  template<span class="token operator">:</span> <span class="token string">&#39;&lt;h1&gt; {{title}} works &lt;/h1&gt;&#39;</span><span class="token punctuation">,</span>\n  styles<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;h1 { font-weight: bold; }&#39;</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n  title <span class="token operator">=</span> <span class="token string">&#39;app&#39;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',52)],p={},o=(0,a(3744).Z)(p,[["render",function(n,s){return(0,e.wg)(),(0,e.iD)("div",null,t)}]])},4780:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e=JSON.parse('{"key":"v-40c93672","path":"/component-creation/","title":"Component Creation","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Using Angular CLI","slug":"using-angular-cli","link":"#using-angular-cli","children":[]},{"level":3,"title":"Manual Creation","slug":"manual-creation","link":"#manual-creation","children":[]},{"level":3,"title":"Example","slug":"example","link":"#example","children":[]}],"git":{},"filePathRelative":"component-creation/README.md"}')}}]);